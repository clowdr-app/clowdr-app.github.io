{"version":3,"file":"component---src-pages-resources-tsx-93779079f4bedd118c90.js","mappings":"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","sources":["webpack://clowdr-site/./src/components/layouts/resources-layout.tsx","webpack://clowdr-site/./src/components/resources/category-cards.tsx","webpack://clowdr-site/./src/components/resources/resource-cards.tsx","webpack://clowdr-site/./src/components/resources/featured-cards.tsx","webpack://clowdr-site/./src/pages/resources.tsx"],"sourcesContent":["import {\n  Box,\n  chakra,\n  Flex,\n  HStack,\n  Link,\n  List,\n  ListItem,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport Footer from \"../footer\";\nimport { DesktopMenu } from \"../menus/desktop-menu\";\nimport { MobileMenu } from \"../menus/mobile-menu\";\n\nexport function ResourcesLayout({\n  children,\n  headings,\n}: {\n  children: JSX.Element[] | JSX.Element | string | string[];\n  headings?: HeadingNode[];\n}) {\n  return (\n    <Flex direction=\"column\" m=\"0 auto\" minH=\"100vh\">\n      <chakra.header layerStyle=\"header\" w=\"full\">\n        <Box display={{ base: \"none\", md: \"block\" }}>\n          <DesktopMenu />\n        </Box>\n        <Box display={{ base: \"block\", md: \"none\" }}>\n          <MobileMenu />\n        </Box>\n      </chakra.header>\n      <HStack\n        justifyContent=\"center\"\n        alignItems=\"flex-start\"\n        w=\"auto\"\n        flex=\"0 1 1\"\n      >\n        {headings?.length ? (\n          <chakra.nav\n            display={{ base: \"none\", lg: \"block\" }}\n            visibility={{ base: \"hidden\", lg: \"visible\" }}\n            flex=\"1 0 300px\"\n            maxW=\"400px\"\n            borderWidth=\"1px\"\n            borderStyle=\"solid\"\n            borderColor=\"gray.400\"\n            borderRadius=\"md\"\n            p={2}\n            m={2}\n            pos=\"sticky\"\n            top={2}\n            left={0}\n          >\n            <TOC nodes={headings} noLeftMargin />\n          </chakra.nav>\n        ) : undefined}\n        <Box as=\"main\">{children}</Box>\n        {headings?.length ? (\n          <Box\n            display={{ base: \"none\", xl: \"block\" }}\n            visibility={{ base: \"hidden\", xl: \"visible\" }}\n            flex=\"1 0 300px\"\n            maxW=\"400px\"\n            p={2}\n            my={2}\n          ></Box>\n        ) : undefined}\n      </HStack>\n      <Footer />\n    </Flex>\n  );\n}\n\nexport function TOC({\n  nodes,\n  noLeftMargin,\n}: {\n  nodes: HeadingNode[];\n  noLeftMargin?: boolean;\n}): JSX.Element {\n  if (nodes.length === 0) {\n    return <></>;\n  }\n\n  return (\n    <List spacing={1} ml={noLeftMargin ? 0 : 4}>\n      {nodes.map((node, idx) => (\n        <ListItem key={\"node-\" + idx}>\n          {node.link ? (\n            <Link href={node.link}>{node.text}</Link>\n          ) : (\n            <chakra.span>{node.text}</chakra.span>\n          )}\n          <TOC nodes={node.children} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nexport interface HeadingValue {\n  text: string;\n  link: string | undefined;\n  level: number;\n}\n\nexport interface HeadingNode {\n  text: string;\n  link: string | undefined;\n  children: HeadingNode[];\n}\n\nexport function buildingHeadingsTree(\n  headingValues: HeadingValue[],\n  index: { idx: number },\n  level: number\n): HeadingNode[] {\n  if (index.idx >= headingValues.length) {\n    return [];\n  }\n\n  const result: HeadingNode[] = [];\n  while (index.idx < headingValues.length) {\n    const currentHeadingValue = headingValues[index.idx];\n    if (currentHeadingValue.level !== level) {\n      break;\n    }\n\n    index.idx++;\n\n    result.push({\n      text: currentHeadingValue.text,\n      link: currentHeadingValue.link,\n      children: buildingHeadingsTree(headingValues, index, level + 1),\n    });\n  }\n\n  return result;\n}\n","import type { HTMLChakraProps } from \"@chakra-ui/react\";\nimport {\n  chakra,\n  Heading,\n  SimpleGrid,\n  useId,\n  VisuallyHidden,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport type { NodeSummaryFragment } from \"../../generated/graphql-types\";\nimport { Card } from \"../card\";\n\nexport function CategoryCards({\n  categoryNodes,\n  ...props\n}: {\n  categoryNodes: NodeSummaryFragment[];\n} & HTMLChakraProps<\"section\">): JSX.Element {\n  const categoriesHeadingId = useId();\n  return (\n    <chakra.section aria-labelledby={categoriesHeadingId} {...props}>\n      <VisuallyHidden>\n        <Heading as=\"h2\" id={categoriesHeadingId}>\n          Sub-categories\n        </Heading>\n      </VisuallyHidden>\n      <SimpleGrid columns={{ sm: 1, lg: 2 }} spacing={4} mt={2} mb={8}>\n        {categoryNodes.map((node, i) => (\n          <Card\n            key={i}\n            indexUrl={node.fields?.slug ?? \"#\"}\n            descriptionHtml={\n              node.frontmatter?.description ?? node.excerpt ?? \"\"\n            }\n            title={node.frontmatter?.title ?? \"(No title)\"}\n            type=\"category\"\n            isFeatured={Boolean(node.frontmatter?.isFeatured)}\n          />\n        ))}\n      </SimpleGrid>\n    </chakra.section>\n  );\n}\n","import type { HTMLChakraProps } from \"@chakra-ui/react\";\nimport {\n  chakra,\n  Heading,\n  SimpleGrid,\n  useId,\n  VisuallyHidden,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport type { NodeSummaryFragment } from \"../../generated/graphql-types\";\nimport { Card } from \"../card\";\n\nexport function ResourceCards({\n  resourceNodes,\n  ...props\n}: {\n  resourceNodes: NodeSummaryFragment[];\n} & HTMLChakraProps<\"section\">): JSX.Element {\n  const resourcesHeadingId = useId();\n  return (\n    <chakra.section aria-labelledby={resourcesHeadingId} {...props}>\n      <VisuallyHidden>\n        <Heading as=\"h2\" id={resourcesHeadingId}>\n          Resources\n        </Heading>\n      </VisuallyHidden>\n      <SimpleGrid columns={{ sm: 1, lg: 2 }} spacing={4} mt={2}>\n        {resourceNodes.map((node, i) => (\n          <Card\n            key={i}\n            indexUrl={node.fields?.slug ?? \"#\"}\n            descriptionHtml={\n              node.frontmatter?.description ?? node.excerpt ?? \"\"\n            }\n            title={node.frontmatter?.title ?? \"(No title)\"}\n            author={node.frontmatter?.author ?? undefined}\n            isFeatured={Boolean(node.frontmatter?.isFeatured)}\n            type=\"resource\"\n          />\n        ))}\n      </SimpleGrid>\n    </chakra.section>\n  );\n}\n","import type { HTMLChakraProps } from \"@chakra-ui/react\";\nimport {\n  chakra,\n  Heading,\n  SimpleGrid,\n  useId,\n  VisuallyHidden,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport type { NodeSummaryFragment } from \"../../generated/graphql-types\";\nimport { Card } from \"../card\";\n\nexport function FeaturedCards({\n  featuredNodes,\n  ...props\n}: {\n  featuredNodes: NodeSummaryFragment[];\n} & HTMLChakraProps<\"section\">): JSX.Element {\n  const categoriesHeadingId = useId();\n  return (\n    <chakra.section aria-labelledby={categoriesHeadingId} {...props}>\n      <VisuallyHidden>\n        <Heading as=\"h2\" id={categoriesHeadingId}>\n          Featured resources\n        </Heading>\n      </VisuallyHidden>\n      <SimpleGrid columns={{ sm: 1, lg: 2 }} spacing={4} mt={2} mb={8}>\n        {featuredNodes.map((node, i) => (\n          <Card\n            key={i}\n            indexUrl={node.fields?.slug ?? \"#\"}\n            descriptionHtml={\n              node.frontmatter?.description ?? node.excerpt ?? \"\"\n            }\n            title={node.frontmatter?.title ?? \"(No title)\"}\n            type={node.fields?.isCategoryIndex ? \"category\" : \"resource\"}\n            isFeatured={Boolean(node.frontmatter?.isFeatured)}\n          />\n        ))}\n      </SimpleGrid>\n    </chakra.section>\n  );\n}\n","import { Box, Container, Heading, Link, Text } from \"@chakra-ui/react\";\nimport { graphql, Link as GatsbyLink, useStaticQuery } from \"gatsby\";\nimport React from \"react\";\nimport { ResourcesLayout } from \"../components/layouts/resources-layout\";\nimport { CategoryCards } from \"../components/resources/category-cards\";\nimport { FeaturedCards } from \"../components/resources/featured-cards\";\nimport { ResourceCards } from \"../components/resources/resource-cards\";\nimport { Search } from \"../components/resources/search\";\nimport Title from \"../components/title\";\nimport type { ResourcesQuery } from \"../generated/graphql-types\";\n\nexport default function Resources() {\n  const result: ResourcesQuery = useStaticQuery<ResourcesQuery>(graphql`\n    query Resources {\n      allMarkdownRemark(\n        sort: { fields: [frontmatter___title], order: ASC }\n        filter: {\n          fields: {\n            collection: { eq: \"resources\" }\n            slug: { regex: \"/^/[^/]+[/]?$/\" }\n          }\n        }\n      ) {\n        nodes {\n          ...NodeSummary\n        }\n      }\n      featuredMarkdownRemark: allMarkdownRemark(\n        sort: { fields: [frontmatter___title], order: ASC }\n        filter: { frontmatter: { isFeatured: { eq: true } } }\n      ) {\n        nodes {\n          ...NodeSummary\n        }\n      }\n      localSearchResources {\n        index\n        store\n      }\n    }\n  `);\n  const categoryNodes = result.allMarkdownRemark.nodes.filter(\n    node => node.fields?.isCategoryIndex\n  );\n  const resourceNodes = result.allMarkdownRemark.nodes.filter(\n    node => !node.fields?.isCategoryIndex\n  );\n\n  const categoriesEl = categoryNodes.length ? (\n    <CategoryCards categoryNodes={categoryNodes} mt={2} />\n  ) : undefined;\n\n  const resourcesEl = resourceNodes.length ? (\n    <ResourceCards resourceNodes={resourceNodes} mt={4} />\n  ) : undefined;\n\n  const featuredEl = result.featuredMarkdownRemark.nodes.length ? (\n    <FeaturedCards featuredNodes={result.featuredMarkdownRemark.nodes} mt={4} />\n  ) : undefined;\n\n  return (\n    <>\n      <Title title=\"Resources\" />\n      <ResourcesLayout>\n        <Container my={8}>\n          <Heading as=\"h1\" size=\"3xl\">\n            Resources\n          </Heading>\n          <Text>\n            We are continually improving Midspace&apos;s help resources.{\" \"}\n            <Link as={GatsbyLink} to=\"/contact\">\n              Contact us\n            </Link>{\" \"}\n            if you have a suggestion for how we could improve these resources.\n            (Or contribute directly{\" \"}\n            <Link href=\"https://github.com/clowdr-app/clowdr-app.github.io/\">\n              on GitHub\n            </Link>\n            !)\n          </Text>\n          {result.localSearchResources?.index &&\n          result.localSearchResources.store ? (\n            <Box my={8}>\n              <Search\n                index={result.localSearchResources.index}\n                store={result.localSearchResources.store}\n              />\n            </Box>\n          ) : undefined}\n          {result.featuredMarkdownRemark.nodes.length ? (\n            <>\n              <Heading as=\"h2\" size=\"xl\" mb={4}>\n                Featured\n              </Heading>\n              {featuredEl}\n            </>\n          ) : undefined}\n          <Heading as=\"h2\" size=\"xl\" mb={4}>\n            Categories\n          </Heading>\n          {categoriesEl}\n          {resourcesEl}\n          {!categoryNodes.length && !resourceNodes.length ? (\n            <Text mt={8}>\n              Sorry, there are no resources available right now.\n            </Text>\n          ) : undefined}\n        </Container>\n      </ResourcesLayout>\n    </>\n  );\n}\n"],"names":["ResourcesLayout","children","headings","React","Flex","direction","m","minH","chakra","layerStyle","w","Box","display","base","md","DesktopMenu","MobileMenu","HStack","justifyContent","alignItems","flex","length","lg","visibility","maxW","borderWidth","borderStyle","borderColor","borderRadius","p","pos","top","left","TOC","nodes","noLeftMargin","undefined","as","xl","my","Footer","List","spacing","ml","map","node","idx","ListItem","key","link","Link","href","text","buildingHeadingsTree","headingValues","index","level","result","currentHeadingValue","push","CategoryCards","categoryNodes","props","categoriesHeadingId","useId","VisuallyHidden","Heading","id","SimpleGrid","columns","sm","mt","mb","i","Card","indexUrl","fields","_node$fields","slug","descriptionHtml","frontmatter","_node$frontmatter","description","excerpt","title","_node$frontmatter2","type","isFeatured","Boolean","_node$frontmatter3","ResourceCards","resourceNodes","resourcesHeadingId","author","_node$frontmatter4","FeaturedCards","featuredNodes","isCategoryIndex","Resources","useStaticQuery","allMarkdownRemark","filter","_node$fields2","categoriesEl","resourcesEl","featuredEl","featuredMarkdownRemark","Title","Container","size","Text","GatsbyLink","to","localSearchResources","store","Search"],"sourceRoot":""}